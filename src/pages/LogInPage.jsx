import React, { useState, useContext } from 'react'; // –Ü–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫ React
import { AuthContext } from '../AuthContext'; // –Ü–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
import './LogInPage.css'; // –Ü–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤—Ö–æ–¥—É

const LogInPage = () => {
  const [email, setEmail] = useState(''); // –°—Ç–µ–π—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è email
  const [password, setPassword] = useState(''); // –°—Ç–µ–π—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
  const [showPassword, setShowPassword] = useState(false); // –°—Ç–µ–π—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –≤–∏–¥–∏–º–æ—Å—Ç—ñ –ø–∞—Ä–æ–ª—è
  const { login } = useContext(AuthContext); // –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó login
  const [error, setError] = useState(''); // –°—Ç–µ–π—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏

  // –§—ñ–∫—Ç–∏–≤–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  const fakeUser = {
    email: 'test@example.com',
    password: 'password123'
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ä–º–∏ –≤—Ö–æ–¥—É
  const handleSubmit = async (event) => {
    event.preventDefault();

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∑ —Ñ—ñ–∫—Ç–∏–≤–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (email === fakeUser.email && password === fakeUser.password) {
      login(); // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó login –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
      setError(''); // –°–∫–∏–¥–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
    } else {
      setError('Invalid email or password'); // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –≤–∏–¥–∏–º–æ—Å—Ç—ñ –ø–∞—Ä–æ–ª—è
  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div>
      <form className='login-form' onSubmit={handleSubmit}>
        <div className='login-form-div'>
          <label className='login-label' htmlFor="email">Email</label>
          <input
            className='login-input'
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div className='login-form-div password-div'>
          <label className='login-label' htmlFor="password">Password</label>
          <div className='password-input-container'>
            <input
              className='login-input'
              type={showPassword ? 'text' : 'password'}
              id="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
            <button
              type="button"
              className="toggle-password"
              onClick={togglePasswordVisibility}
            >
              {showPassword ? 'üëÅÔ∏è' : 'üôà'}
            </button>
          </div>
        </div>
        {error && <p className='error-message'>{error}</p>} {/* –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏, —è–∫—â–æ —î */}
        <button className="btn-login" type="submit">Log In</button>
      </form>
    </div>
  );
};

export default LogInPage;
